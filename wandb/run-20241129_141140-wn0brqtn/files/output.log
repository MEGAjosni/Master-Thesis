Traceback (most recent call last):
  File "/zhome/32/9/137127/Master-Thesis/scripts/lotka-volterra-upinn.py", line 82, in <module>
    X_true = LV.solve(t_eval)
             ^^^^^^^^^^^^^^^^
  File "/zhome/32/9/137127/Master-Thesis/./utils/DataGenerators.py", line 16, in solve
    out = odeint(self.f, self.X0, t, (self.alpha, self.beta, self.gamma, self.delta))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/32/9/137127/.venv/lib/python3.11/site-packages/scipy/integrate/_odepack_py.py", line 239, in odeint
    dt = np.diff(t)
         ^^^^^^^^^^
  File "/zhome/32/9/137127/.venv/lib/python3.11/site-packages/numpy/lib/function_base.py", line 1415, in diff
    a = asanyarray(a)
        ^^^^^^^^^^^^^
  File "/zhome/32/9/137127/.venv/lib/python3.11/site-packages/torch/_tensor.py", line 1149, in __array__
    return self.numpy()
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
