Beginning training...
Running on: cuda
Traceback (most recent call last):
  File "/zhome/32/9/137127/Master-Thesis/scripts/lotka-volterra-upinn.py", line 246, in <module>
    train(u, G, data, optimizer=torch.optim.AdamW, lr=wandb.config["learning_rate"], epochs=wandb.config["Epochs"], plotting=dict(log_plots=True, plot_interval=1000), save_model=dict(save=False, path='models/lotka-volterra', name='LV-UPINN'))
  File "/zhome/32/9/137127/Master-Thesis/scripts/lotka-volterra-upinn.py", line 191, in train
    loss, prev_losses = optimizer.step(closure)  # Pass the closure to the optimizer
                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/32/9/137127/.venv/lib/python3.11/site-packages/torch/optim/optimizer.py", line 487, in wrapper
    out = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/32/9/137127/.venv/lib/python3.11/site-packages/torch/optim/optimizer.py", line 91, in _use_grad
    ret = func(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/32/9/137127/.venv/lib/python3.11/site-packages/torch/optim/adamw.py", line 197, in step
    loss = closure()
           ^^^^^^^^^
  File "/zhome/32/9/137127/Master-Thesis/scripts/lotka-volterra-upinn.py", line 175, in closure
    lambda_ = SoftAdapt(cur_losses, prev_losses, beta=beta_softadapt)   # SoftAdapt weights
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zhome/32/9/137127/Master-Thesis/./utils/Utils.py", line 32, in SoftAdapt
    s = f - fm1
        ~~^~~~~
RuntimeError: The size of tensor a (3) must match the size of tensor b (4) at non-singleton dimension 0
